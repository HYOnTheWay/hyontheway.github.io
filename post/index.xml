<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on HY&#39;s blog</title>
    <link>https://hyontheway.github.io/post/</link>
    <description>Recent content in Posts on HY&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Mon, 24 Feb 2020 11:16:04 +0800</lastBuildDate>
    
	<atom:link href="https://hyontheway.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>负载均衡学习和实现</title>
      <link>https://hyontheway.github.io/post/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 24 Feb 2020 11:16:04 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AD%A6%E4%B9%A0%E5%92%8C%E5%AE%9E%E7%8E%B0/</guid>
      <description>一.负载均衡介绍 1.什么是负载均衡? 用户-&amp;gt;负载均衡平衡器-&amp;gt;多台服务器(一个集群下) 负载均衡就是负载均衡器中实现的算法或者硬件</description>
    </item>
    
    <item>
      <title>支付中常见幂等设计</title>
      <link>https://hyontheway.github.io/post/%E6%94%AF%E4%BB%98%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%B9%82%E7%AD%89%E8%AE%BE%E8%AE%A1/</link>
      <pubDate>Sat, 15 Feb 2020 17:23:56 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E6%94%AF%E4%BB%98%E4%B8%AD%E5%B8%B8%E8%A7%81%E5%B9%82%E7%AD%89%E8%AE%BE%E8%AE%A1/</guid>
      <description>交易系统中的幂等设计 在一个典型的订单交易系统中，防重和幂等设计是重要而又非常基本的概念。 1.幂等含义: 只要调用接口成功，外部对接口的多次调用</description>
    </item>
    
    <item>
      <title>关于项目中订单二次提交总结,md</title>
      <link>https://hyontheway.github.io/post/%E5%85%B3%E4%BA%8E%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%AE%A2%E5%8D%95%E4%BA%8C%E6%AC%A1%E6%8F%90%E4%BA%A4%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 15 Feb 2020 15:28:52 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E5%85%B3%E4%BA%8E%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%AE%A2%E5%8D%95%E4%BA%8C%E6%AC%A1%E6%8F%90%E4%BA%A4%E6%80%BB%E7%BB%93/</guid>
      <description>订单重复提交问题 1.原因: 1.网络延迟的情况下让用户有时间点击多次提交按钮导致表单重复提交. 2.表单提交后用户点击浏览器的刷新导致表单重复提</description>
    </item>
    
    <item>
      <title>订单中的减库存操作解析</title>
      <link>https://hyontheway.github.io/post/%E8%AE%A2%E5%8D%95%E4%B8%AD%E7%9A%84%E5%87%8F%E5%BA%93%E5%AD%98%E6%93%8D%E4%BD%9C%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 14 Feb 2020 16:00:36 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E8%AE%A2%E5%8D%95%E4%B8%AD%E7%9A%84%E5%87%8F%E5%BA%93%E5%AD%98%E6%93%8D%E4%BD%9C%E8%A7%A3%E6%9E%90/</guid>
      <description>订单业务中减库存操作涉及到的分布式事务问题与线程安全问题 一.分析减库存的业务实现 减库存可以采用同步调用（Feign的方式），也可以采用异步调</description>
    </item>
    
    <item>
      <title>分析数据库锁</title>
      <link>https://hyontheway.github.io/post/%E5%88%86%E6%9E%90%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81/</link>
      <pubDate>Tue, 11 Feb 2020 19:36:46 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E5%88%86%E6%9E%90%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81/</guid>
      <description>[TOC] 1.宏观 锁是计算机协调多个进程或线程并发访问某一资源的机制 1.数据库锁 粒度小,方便用于集群环境 2.代码锁 粒度大,需要封装 2.微观(操作粒度</description>
    </item>
    
    <item>
      <title>分库分表理解</title>
      <link>https://hyontheway.github.io/post/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%90%86%E8%A7%A3/</link>
      <pubDate>Thu, 06 Feb 2020 12:28:23 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8%E7%90%86%E8%A7%A3/</guid>
      <description>[TOC] MYSQL分库分表的理解 1. 概述 1.1 为什么要分库分表? 生产上解决数据量过大对关系型数据库性能造成影响. 1.2分库分表是什么? 方案1:提升服务器</description>
    </item>
    
    <item>
      <title>动态规划 Introduction</title>
      <link>https://hyontheway.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-introduction/</link>
      <pubDate>Sat, 01 Feb 2020 14:22:45 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-introduction/</guid>
      <description>@[toc] 动态规划-Introduction 1.了解动态规划 灵活: 动态规划题目中类型丰富,套路代码较少,专杀&amp;quot;过拟合的神经网络&amp;quot;</description>
    </item>
    
    <item>
      <title>面经1</title>
      <link>https://hyontheway.github.io/post/%E9%9D%A2%E7%BB%8F1/</link>
      <pubDate>Tue, 28 Jan 2020 19:36:55 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E9%9D%A2%E7%BB%8F1/</guid>
      <description>1.MyBatis中当实体类中的属性名和字段名不一样,怎么办? 1.写SQL语句时起别名 2.在MyBatis的全局配置文件中开启驼峰命名(&amp;q</description>
    </item>
    
    <item>
      <title>字节Java面经</title>
      <link>https://hyontheway.github.io/post/%E5%AD%97%E8%8A%82java%E9%9D%A2%E7%BB%8F/</link>
      <pubDate>Tue, 28 Jan 2020 18:54:04 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E5%AD%97%E8%8A%82java%E9%9D%A2%E7%BB%8F/</guid>
      <description>一面: 基础: 1.异步和同步IO? 2.数组和链表的区别? 3.双向链表的删除时间复杂度? 4.hashmap原理?扩容如何实现? 5.tcp和udp</description>
    </item>
    
    <item>
      <title>正则表达</title>
      <link>https://hyontheway.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE/</link>
      <pubDate>Tue, 28 Jan 2020 18:29:01 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE/</guid>
      <description>为什么使用正则? 用于对文本进行复杂处理.(语法规则) 1.基本语法 普通字符 字母,数组,汉字,下划线,以及没有特殊定义的标点符号,都是&amp;quot</description>
    </item>
    
    <item>
      <title>搭建个人博客网站</title>
      <link>https://hyontheway.github.io/post/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</link>
      <pubDate>Tue, 28 Jan 2020 17:45:15 +0800</pubDate>
      
      <guid>https://hyontheway.github.io/post/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/</guid>
      <description>1.安装hugo在本地,做仓库 1.在windows下安装choco chocolatey是windows下的一个命令行的包管理工具，类似ubu</description>
    </item>
    
  </channel>
</rss>